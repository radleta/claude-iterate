name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 1.0.1)'
        required: true
        type: string

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      id-token: write
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all history for branch verification

      - name: Verify tag is on main branch
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
        run: |
          # Get the tag name
          TAG_NAME=${GITHUB_REF#refs/tags/}
          echo "Verifying tag $TAG_NAME is on main branch..."

          # Check if tag exists on main branch
          if ! git branch -r --contains tags/$TAG_NAME | grep -q 'origin/main'; then
            echo "::error::Tag $TAG_NAME is not on the main branch. Please merge to main before releasing."
            exit 1
          fi

          echo "âœ“ Tag $TAG_NAME is on main branch"

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          registry-url: 'https://registry.npmjs.org'

      - name: Update npm to latest version for OIDC support
        run: |
          npm install -g npm@latest
          npm --version

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Run tests
        run: npm test

      - name: Set version (manual trigger)
        if: github.event_name == 'workflow_dispatch'
        run: |
          npm version ${{ github.event.inputs.version }} --no-git-tag-version

      - name: Create tarball
        run: |
          npm pack
          mv *.tgz claude-iterate.tgz

      - name: Publish to npm
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          npm publish --provenance --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub Release
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v1
        with:
          files: |
            claude-iterate.tgz
          generate_release_notes: true
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
